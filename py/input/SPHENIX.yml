part:
  id: 
    type: long long
    doc:  Particle unique ID

  gpart:
    type: struct gpart*
    doc:  Pointer to corresponding gravity part

  x:
    type: double
    size: 3
    doc: the particle position

  v:
    size: 3
    doc: Particle predicted velocity

  a_hydro:
    size: 3
    doc: Particle acceleration 

  mass:
    doc: Particle mass

  h:
    doc: Particle smoothing length

  u:
    doc: Particle internal energy

  u_dt:
    doc: Time derivative of the internal energy

  rho:
    doc: Particle density

  viscosity:
    type: struct
    doc: store viscosity information in a separate struct
    contents:
      div_v:
        doc: Particle velocity divergence

      div_v_dt:
        doc: Time differential of velocity divergence

      div_v_previous_step:
        doc: Particle velocity divergence from previous step

      alpha:
        doc: Artificial viscosity parameter
      
      v_sig:
        doc: Signal velocity

  diffusion:
    type: struct
    doc: Store thermal diffusion information in a separate struct
    contents:

      laplace_u:
        doc: del^2 u, a smoothed quantity

      alpha: 
        doc: Thermal diffusion coefficient

  union:
    doc: Store density/force specific stuff
    contents:
      density:
        type: struct
        doc: Structure for the variables only used in the density loop over neighbours 
             Quantities in this sub-structure should only be accessed in the density loop 
             over neighbours and the ghost task
        contents:
          wcount:
            doc: Neighbour number count
          wcount_dh:
            doc: Derivative of the neighbour number with respect to h
          rho_dh:
            doc: Derivative of density with respect to h
          rot_v:
            doc: Particle velocity curl
            size: 3
      force:
        type: struct
        doc: Structure for the variables only used in the force loop over neighbours 
             Quantities in this sub-structure should only be accessed in the force loop 
             over neighbours and the ghost, drift and kick tasks
        contents:
          f_gradh:
            doc: "'Grad h' term -- only partial in P-U"
          pressure:
            doc: Particle pressure
          soundspeed: 
            doc: Particle soundspeed
          h_dt: 
            doc: Time derivative of smoothing length 
          balsara:
            doc: Balsara switch
          alpha_visc_max_ngb:
            doc: Maximal alpha (viscosity) over neighbours

  adaptive_softening_data:
    type: struct adaptive_softening_part_data
    doc: Additional data used for adaptive softening

  mhd_data:
    type: struct mhd_part_data
    doc: Additional data used by the MHD scheme

  chemistry_data:
    type: struct chemistry_part_data 
    doc: Chemistry information

  cooling_data:
    type: struct cooling_part_data
    doc: Cooling information

  feedback_data:
    type: struct feedback_part_data
    doc: Additional data used by the feedback

  black_holes_data:
    type: struct black_holes_part_data
    doc: Black holes information (eg swallowing ID)

  sink_data:
    type: struct sink_part_data
    doc: Sink information (eg swallowing ID)

  pressure_floor_data:
    type: struct pressure_floor_part_data
    doc: Additional data used by the pressure floor

  rt_data:
    type: struct rt_part_data
    doc: Additional Radiative Transfer Data

  rt_time_data:
    type: struct rt_timestepping_data
    doc: RT sub-cycling time stepping data

  depth_h:
    doc: Tree-depth at which size / 2 <= h * gamma < size
    type: char

  time_bin:
    type: timebin_t
    doc: Time-step length

  limiter_data:
    type: struct timestep_limiter_data
    doc: Time-step limiter information

  ti_drift:
    type: integertime_t
    doc: Time of the last drift
    ifdef: SWIFT_DEBUG_CHECKS

  ti_kick:
    type: integertime_t
    doc: Time of the last drift
    ifdef: SWIFT_DEBUG_CHECKS

  N_density:
    type: int
    doc: Integer number of neighbours in the density loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  N_density_exact:
    type: int
    doc: Exact integer number of neighbours in the density loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  N_gradient:
    type: int
    doc: Integer number of neighbours in the gradient loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  N_gradient_exact:
    type: int
    doc: Exact integer number of neighbours in the gradient loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  N_force:
    type: int
    doc: Integer number of neighbours in the force loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  N_force_exact:
    type: int
    doc: Exact integer number of neighbours in the force loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  rho_exact:
    type: float
    doc: Exact value of the density field obtained via brute-force loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  n_density:
    type: float
    doc: Weighted number of neighbours in the density loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  n_density_exact:
    type: float
    doc: Exact value of the weighted number of neighbours in the density loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  n_gradient:
    type: float
    doc: Weighted number of neighbours in the gradient loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  n_gradient_exact:
    type: float
    doc: Exact value of the weighted number of neighbours in the gradient loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  n_force:
    type: float
    doc: Weighted number of neighbours in the force loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  n_force_exact:
    type: float
    doc: Exact value of the weighted number of neighbours in the force loop
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  inhibited_exact:
    type: char
    doc: Has this particle interacted with any unhibited neighbour?
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  limited_part:
    type: char
    doc: Has this particle been woken up by the limiter?
    ifdef: SWIFT_HYDRO_DENSITY_CHECKS

  geometry:
    type: struct fvpm_geometry_struct
    doc: Geometrical quantities used for Finite Volume Particle Method RT


